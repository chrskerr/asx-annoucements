{"version":3,"sources":["Home.js","App.js","webpack:///./src/index.js?b635"],"names":["SUBSCRIPTION","gql","exchangeOptions","value","label","Home","useState","JSON","parse","localStorage","getItem","savedData","setSavedData","is_price_sensitive","set_is_price_sensitive","is_asx_300","set_is_asx_300","is_after_4pm_yesterday","set_is_after_4pm_yesterday","exchange","setExchange","time_before","formatISO","set","subBusinessDays","Date","hours","minutes","seconds","useSubscription","variables","incl_asx","incl_nsx","data","loading","announcements","_","get","annoucementsWithSavedData","map","announcement","id","read","saved","unread","filter","useEffect","setItem","stringify","document","title","size","className","onClick","icon","faCheck","faTimes","onChange","e","target","isEmpty","key","faSpinner","spin","el","RowCard","description","hotcopper_url","stock","time","name","ticker","GICS","parsedTime","parseJSON","lineTwo","compact","join","href","rel","faExternalLinkAlt","format","Clock","setTime","intervalRef","setIntervalRef","setInterval","App","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","timeout","link","split","query","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.979510cd.chunk.js","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"proptypes\";\nimport { useSubscription } from \"@apollo/react-hooks\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner, faCheck, faTimes, faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport _ from \"lodash\";\nimport gql from \"graphql-tag\";\nimport { parseJSON, format, subBusinessDays, set, formatISO } from \"date-fns\";\n\nconst SUBSCRIPTION = gql`\nsubscription SubcribeAnnouncements ( $time_before: timestamptz!, $is_price_sensitive: [Boolean!], $is_asx_300: [Boolean!], $incl_asx: String!, $incl_nsx: String! ) {\n\tannouncements( \n\t\twhere: { \n            time: { _gte: $time_before },\n\t\t\tis_price_sensitive: { _in: $is_price_sensitive },\n            _or: [\n                { stock: { is_asx_300: { _in: $is_asx_300 }, exchange: { _eq: $incl_asx }}},\n                { stock: { exchange: { _eq: $incl_nsx }}}\n            ]\n\t\t},\n\t\torder_by: { time: desc }\n\t) {\n\t\tann_download_url\n\t\tdescription\n\t\thotcopper_url\n\t\tid time\n\t\tis_price_sensitive\n\t\tstock {\n\t\t\tname ticker\n\t\t\tis_asx_300 GICS\n            exchange\n\t\t}\n\t}\n}`;\n\nconst exchangeOptions = [\n\t{ value: \"both\", label: \"Both\" },\n\t{ value: \"asx\", label: \"ASX\" },\n\t{ value: \"nsx\", label: \"NSX\" },\n];\n\n\nexport default function Home () {\n\tconst [ savedData, setSavedData ] = useState( JSON.parse( localStorage.getItem( \"savedData\" )));\n\tconst [ is_price_sensitive, set_is_price_sensitive ] = useState( true );\n\tconst [ is_asx_300, set_is_asx_300 ] = useState( true );\n\tconst [ is_after_4pm_yesterday, set_is_after_4pm_yesterday ] = useState( true );\n\tconst [ exchange, setExchange ] = useState( \"both\" );\n\n\tconst time_before = is_after_4pm_yesterday ? formatISO( set( subBusinessDays( new Date(), 1 ), { hours: 16, minutes: 0, seconds: 0 })) : formatISO( 0 );\n\n\tconst { data, loading } = useSubscription( SUBSCRIPTION, { variables: { \n\t\tis_price_sensitive: is_price_sensitive ? [ true ] : [ true, false ],\n\t\tis_asx_300: is_asx_300 ? [ true ] : [ true, false ],\n\t\ttime_before,\n\t\tincl_asx: ( exchange === \"asx\" || exchange === \"both\" ) ? \"ASX\" : \"\",\n\t\tincl_nsx: ( exchange === \"nsx\" || exchange === \"both\" ) ? \"NSX\" : \"\",\n\t}});\n\n\tconst announcements = _.get( data, \"announcements\" );\n\tconst annoucementsWithSavedData = _.map( announcements, announcement => {\n\t\tconst { id } = announcement;\n\t\treturn {\n\t\t\t...announcement,\n\t\t\tread: _.get( savedData, [ id, \"read\" ], false ),\n\t\t\tsaved: _.get( savedData,[ id, \"saved\" ], false ),\n\t\t};});\n\n\tconst unread = _.filter( annoucementsWithSavedData, { read: false, saved: false });\n\tconst saved = _.filter( annoucementsWithSavedData, { saved: true });\n\tconst read = _.filter( annoucementsWithSavedData, { read: true, saved: false });\n\n\tuseEffect(() => {\n\t\tif ( !savedData ) setSavedData({});\n\t\tlocalStorage.setItem( \"savedData\", JSON.stringify( savedData ));\n\t}, [ savedData ]);\n\t\n\tuseEffect(() => { document.title = `ASX/NSX Ann Feed (${ _.size( unread ) } unread)`; }, [ unread ]);\n\n\tuseEffect(() => { if ( exchange !== \"asx\" ) set_is_asx_300( false );}, [ exchange ]);\n\n\treturn (\n\t\t<div className=\"body\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<Clock />\n\t\t\t\t<h2>ASX & NSX Recent Announcement Feed</h2>\n\t\t\t\t<p>A scraped collection of ASX and NSX announcements, data updated every 10 mins.</p>\n\t\t\t</div>\n\t\t\t<div className=\"inputs-box-row\">\n\t\t\t\t<div onClick={ () => set_is_price_sensitive( !is_price_sensitive ) }>\n\t\t\t\t\t<p>Price sensitive only?</p>\n\t\t\t\t\t{ is_price_sensitive ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t</div>\n\t\t\t\t<div onClick={ () => set_is_asx_300( !is_asx_300 ) }>\n\t\t\t\t\t<p>ASX 300 only?</p>\n\t\t\t\t\t{ is_asx_300 ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t</div>\n\t\t\t\t<div onClick={ () => set_is_after_4pm_yesterday( !is_after_4pm_yesterday ) }>\n\t\t\t\t\t<p>After 4pm yesterday only?</p>\n\t\t\t\t\t{ is_after_4pm_yesterday ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>Exchange:</p>\n\t\t\t\t\t<select value={ exchange } onChange={ e => setExchange( e.target.value ) }>\n\t\t\t\t\t\t{ !_.isEmpty( exchangeOptions ) && _.map( exchangeOptions, ({ value, label }) => <option key={ value } value={ value }>{ label }</option> )}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{ loading && <div className=\"loader\">\n\t\t\t\t<FontAwesomeIcon icon={ faSpinner } spin size=\"3x\" />\n\t\t\t</div> }\n\n\t\t\t{ ( !loading && _.isEmpty( unread ) && _.isEmpty( saved ) && _.isEmpty( read )) && <p className=\"-colour-tertiary\">No matching announcements</p> }\n\n\t\t\t{ !_.isEmpty( unread ) && <h5>Unread ({ _.size( unread )}):</h5> }\n\t\t\t{ !_.isEmpty( unread ) && _.map( unread, el => <RowCard data={ el } key={ el.id } savedData={ savedData } setSavedData={ setSavedData } /> ) }\n\t\t\t\n\t\t\t{ !_.isEmpty( saved ) && <h5>Saved ({ _.size( saved )}):</h5> }\n\t\t\t{ !_.isEmpty( saved ) && _.map( saved, el => <RowCard data={ el } key={ el.id } savedData={ savedData } setSavedData={ setSavedData } /> ) }\n\t\t\t\n\t\t\t{ !_.isEmpty( read ) && <h5>Read ({ _.size( read )}):</h5> }\n\t\t\t{ !_.isEmpty( read ) && _.map( read, el => <RowCard data={ el } key={ el.id } savedData={ savedData } setSavedData={ setSavedData } /> ) }\n\t\t</div>\n\t);\n}\n\nconst RowCard = ({ data, savedData, setSavedData }) => {\n\tconst { id, description, hotcopper_url, stock, time, read, saved, is_price_sensitive } = data;\n\tconst { name, ticker, GICS, exchange, is_asx_300 } = stock;\n\n\tconst parsedTime =  parseJSON( time );\n\tconst lineTwo = _.compact([ GICS, is_asx_300 ? \"ASX300\" : false, is_price_sensitive ? \"$$\" : false ]).join( \" - \" );\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-header\">\n\t\t\t\t<div>\n\t\t\t\t\t<a href={ `https://finance.yahoo.com/quote/${ ticker  }.AX` } target=\"_blank\" rel=\"noopener noreferrer\">{ exchange }:{ ticker }{ name && ` - ${ name }` }<FontAwesomeIcon icon={ faExternalLinkAlt } size=\"xs\" /></a>\n\t\t\t\t\t<p>{ lineTwo }</p>\n\t\t\t\t</div>\n\t\t\t\t<p>{ format( parsedTime, \"h:mm aaa '-' EE do MMM\" ) }</p>\n\t\t\t</div>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<a href={ hotcopper_url } target=\"_blank\" rel=\"noopener noreferrer\" onClick={ () => setSavedData({ ...savedData, [ id ]: { saved, read: true }}) }>{ description }<FontAwesomeIcon icon={ faExternalLinkAlt } size=\"xs\" /></a>\n\t\t\t\t<div className=\"inputs-box-column\">\n\t\t\t\t\t<div onClick={ () => setSavedData({ ...savedData, [ id ]: { read, saved: !saved }}) }>\n\t\t\t\t\t\t<label>Saved</label>\n\t\t\t\t\t\t{ saved ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={ () => setSavedData({ ...savedData, [ id ]: { saved, read: !read }}) }>\n\t\t\t\t\t\t<label>Read</label>\n\t\t\t\t\t\t{ read ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nRowCard.propTypes = {\n\tdata: PropTypes.object,\n\tsavedData: PropTypes.object,\n\tsetSavedData: PropTypes.func,\n};\n\nconst Clock = () => {\n\tconst [ time, setTime ] = useState( new Date());\n\tconst [ intervalRef, setIntervalRef ] = useState( false );\n\n\tuseEffect(() => { if ( !intervalRef ) setIntervalRef( setInterval(() => setTime( new Date()), 1000 )); }, [ intervalRef ]);\n\n\treturn <h3>{ format( time, \"h:mm:ss aaa '-' EE do MMM\" ) }</h3>;\n};\n","\nimport React from \"react\";\nimport Home from \"./Home\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-client\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { split } from \"apollo-link\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nexport default function App () {\n\n\tconst httpLink = new HttpLink({\n\t\turi: \"https://quiet-river-86309.herokuapp.com/v1/graphql\",\n\t});\n    \n\tconst wsLink = new WebSocketLink({\n\t\turi: \"wss://quiet-river-86309.herokuapp.com/v1/graphql\",\n\t\toptions: {\n\t\t\treconnect: true,\n\t\t\ttimeout: 30000,\n\t\t},\n\t});\n\n\tconst link = split(\n\t\t({ query }) => {\n\t\t\tconst { kind, operation } = getMainDefinition( query );\n\t\t\treturn kind === \"OperationDefinition\" && operation === \"subscription\";\n\t\t},\n\t\twsLink,\n\t\thttpLink,\n\t);\n\n\tconst client = new ApolloClient({\n\t\tlink,\n\t\tcache: new InMemoryCache(),\n\t});\n\n\treturn (\n\t\t<ApolloProvider client={ client }>\n\t\t\t<Home />\n\t\t</ApolloProvider>\n\t);\n}\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( \"root\" ),\n);\n"],"sourceRoot":""}