{"version":3,"sources":["Home.js"],"names":["SUBSCRIPTION","gql","marketCapOptions","label","value","marketCapSizes","micro","lower","upper","small","medium","large","Home","useState","loaded","history","is_price_sensitive","is_after_4pm_yesterday","market_cap","updateSettings","setting","setSettings","s","settings","useEffect","a","localforage","getItem","oldSettings","time_before","formatISO","set","subBusinessDays","Date","hours","minutes","seconds","useSubscription","variables","market_cap_lower","_","get","market_cap_upper","data","loading","announcements","annoucementsWithSavedData","map","announcement","id","read","saved","unread","filter","setItem","omit","document","title","size","className","Clock","onClick","icon","faCheck","faTimes","onChange","e","target","isEmpty","faSpinner","spin","reduce","acc","el","RowCard","savedData","setSavedData","description","hotcopper_url","stock","time","name","ticker","exchange","GICS","parsedTime","parseJSON","lineTwo","compact","numeral","format","join","isHotcopperAnnAvailable","differenceInMinutes","href","rel","faExternalLinkAlt","setTime","intervalRef","setIntervalRef","setInterval","clearInterval"],"mappings":"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","file":"static/js/4.5f5b6a6e.chunk.js","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"proptypes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner, faCheck, faTimes, faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport _ from \"lodash\";\nimport { gql, useSubscription } from \"@apollo/client\";\nimport { parseJSON, format, subBusinessDays, set, formatISO, differenceInMinutes } from \"date-fns\";\nimport numeral from \"numeral\";\nimport localforage from \"localforage\";\n\n\nconst SUBSCRIPTION = gql`\nsubscription SubcribeAnnouncements ( $time_before: timestamptz!, $is_price_sensitive: [Boolean!], $market_cap_lower: numeric, $market_cap_upper: numeric ) {\n\tannouncements( \n\t\twhere: { \n            time: { _gte: $time_before },\n\t\t\tis_price_sensitive: { _in: $is_price_sensitive },\n            stock: { market_cap: { _gte: $market_cap_lower, _lte: $market_cap_upper }}\n\t\t},\n\t\torder_by: { time: desc }\n\t) {\n\t\tann_download_url\n\t\tdescription\n\t\thotcopper_url\n\t\tid time\n\t\tis_price_sensitive\n\t\tstock {\n\t\t\tname ticker\n\t\t\tGICS exchange\n            market_cap\n\t\t}\n\t}\n}`;\n\nconst marketCapOptions = [\n\t{ label: \"Micro Cap\", value: \"micro\" },\n\t{ label: \"Small Cap\", value: \"small\" },\n\t{ label: \"Medium Cap\", value: \"medium\" },\n\t{ label: \"Large Cap\", value: \"large\" },\n];\n\nconst marketCapSizes = {\n\tmicro: { lower: 0, upper: 20000000 },\n\tsmall: { lower: 20000000, upper: 2000000000 },\n\tmedium: { lower: 2000000000, upper: 10000000000 },\n\tlarge: { lower: 10000000000, upper: 999999999999999999 },\n};\n\nexport default function Home () {\n\tconst [ settings, setSettings ] = useState({\n\t\tloaded: false,\n\t\thistory: {},\n\t\tis_price_sensitive: true,\n\t\tis_after_4pm_yesterday: true,\n\t\tmarket_cap: \"small\",\n\t\tupdateSettings: ( setting, value ) => setSettings( s => ({ ...s, [ setting ]: value })),\n\t});\n\tconst { loaded, history, is_price_sensitive, is_after_4pm_yesterday, market_cap, updateSettings } = settings;\n\n\tuseEffect(() => {\n\t\t( async () => {\n\t\t\tconst oldSettings = await localforage.getItem( \"settings\" );\n\t\t\tsetSettings( s => ({ ...s, ...oldSettings, loaded: true }));\n\t\t})();\n\t}, []);\n\n\tconst time_before = is_after_4pm_yesterday ? formatISO( set( subBusinessDays( new Date(), 1 ), { hours: 16, minutes: 0, seconds: 0 })) : formatISO( 0 );\n\n\tconst { data, loading } = useSubscription( SUBSCRIPTION, { variables: { \n\t\tis_price_sensitive: is_price_sensitive ? [ true ] : [ true, false ],\n\t\ttime_before,\n\t\tmarket_cap_lower: _.get( marketCapSizes, [ market_cap, \"lower\" ]),\n\t\tmarket_cap_upper: _.get( marketCapSizes, [ market_cap, \"upper\" ]),\n\t}});\n    \n\tconst announcements = _.get( data, \"announcements\" );\n\tconst annoucementsWithSavedData = _.map( announcements, announcement => {\n\t\tconst { id } = announcement;\n\t\treturn {\n\t\t\t...announcement,\n\t\t\tread: _.get( history, [ id, \"read\" ], false ),\n\t\t\tsaved: _.get( history,[ id, \"saved\" ], false ),\n\t\t};});\n\n\tconst unread = _.filter( annoucementsWithSavedData, { read: false, saved: false });\n\tconst saved = _.filter( annoucementsWithSavedData, { saved: true });\n\tconst read = _.filter( annoucementsWithSavedData, { read: true, saved: false });\n\n\tuseEffect(() => {\n\t\tif ( !history ) updateSettings( \"history\", {});\n\t\tlocalforage.setItem( \"settings\", _.omit( settings, [ \"updateSettings\" ]));\n\t}, [ settings ]);\n\t\n\tuseEffect(() => { \n\t\tdocument.title = `ASX  Ann Feed (${ _.size( unread ) } unread)`; \n\t}, [ unread ]);\n\n\tconst markAllRead = () => {\n\t\tupdateSettings( \n\t\t\t\"history\",\n\t\t\t_.reduce( announcements, ( acc, { id }) => ({\n\t\t\t\t...acc,\n\t\t\t\t[ id ]: { read: true, saved: _.get( history, [ id, \"saved\" ], false ) },\n\t\t\t}), history ),\n\t\t);\n\t};\n\n\tif ( !loaded ) return null;\n\n\treturn (\n\t\t<div className=\"body\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<Clock />\n\t\t\t\t<h2>ASX Recent Announcement Feed</h2>\n\t\t\t\t<p>A scraped collection of ASX announcements, data live updated every minute during peak hours.</p>\n\t\t\t\t<p>History of read and saved annoucments saved locally to your browser.</p>\n\t\t\t</div>\n\t\t\t<div className=\"inputs-box-row\">\n\t\t\t\t<div onClick={ () => updateSettings( \"is_price_sensitive\", !is_price_sensitive ) }>\n\t\t\t\t\t<p>Price sensitive only?</p>\n\t\t\t\t\t{ is_price_sensitive ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>Market cap</p>\n\t\t\t\t\t<select value={ market_cap } onChange={ e => updateSettings( \"market_cap\", e.target.value ) }>\n\t\t\t\t\t\t{ !_.isEmpty( marketCapOptions ) && _.map( marketCapOptions, ({ value, label }) => <option key={ value } value={ value }>{ label }</option> )}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div onClick={ () => updateSettings( \"is_after_4pm_yesterday\", !is_after_4pm_yesterday ) }>\n\t\t\t\t\t<p>After 4pm yesterday only?</p>\n\t\t\t\t\t{ is_after_4pm_yesterday ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{ loading && <div className=\"loader\">\n\t\t\t\t<FontAwesomeIcon icon={ faSpinner } spin size=\"3x\" />\n\t\t\t</div> }\n\n\t\t\t{ ( !loading && _.isEmpty( unread )) && <div className=\"mark-read-button\">\n\t\t\t\t<button onClick={ markAllRead }>Mark All Read</button>\n\t\t\t</div>}\n\n\t\t\t{ ( !loading && _.isEmpty( unread ) && _.isEmpty( saved ) && _.isEmpty( read )) && <p className=\"-colour-tertiary\">No matching announcements</p> }\n\t\t\t\n\t\t\t{ !_.isEmpty( saved ) && <h5>Saved ({ _.size( saved )}):</h5> }\n\t\t\t{ !_.isEmpty( saved ) && _.map( saved, el => <RowCard data={ el } key={ el.id } savedData={ history } setSavedData={ history => updateSettings( \"history\", history ) } /> ) }\n\n\t\t\t{ !_.isEmpty( unread ) && <h5>Unread ({ _.size( unread )}):</h5> }\n\t\t\t{ !_.isEmpty( unread ) && _.map( unread, el => <RowCard data={ el } key={ el.id } savedData={ history } setSavedData={ history => updateSettings( \"history\", history ) } /> ) }\n\t\t\t\n\t\t\t{ !_.isEmpty( read ) && <h5>Read ({ _.size( read )}):</h5> }\n\t\t\t{ !_.isEmpty( read ) && _.map( read, el => <RowCard data={ el } key={ el.id } savedData={ history } setSavedData={ history => updateSettings( \"history\", history ) } /> ) }\n\t\t</div>\n\t);\n}\n\nconst RowCard = ({ data, savedData, setSavedData }) => {\n\tconst { id, description, hotcopper_url, stock, time, read, saved, is_price_sensitive } = data;\n\tconst { name, ticker, exchange, market_cap, GICS } = stock;\n\n\tconst parsedTime =  parseJSON( time );\n\tconst lineTwo = _.compact([ `Market Cap: ${ numeral( market_cap ).format( \"0.0a\" ) }`, is_price_sensitive ? \"Price Sensitive\" : false ]).join( \" - \" );\n\tconst isHotcopperAnnAvailable = differenceInMinutes( new Date(), parsedTime ) <= 20;\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-header\">\n\t\t\t\t<div>\n\t\t\t\t\t<a href={ `https://finance.yahoo.com/quote/${ ticker  }.AX` } target=\"_blank\" rel=\"noopener noreferrer\">{ exchange }:{ ticker }{ name && ` - ${ name }` }<FontAwesomeIcon icon={ faExternalLinkAlt } size=\"xs\" /></a>\n\t\t\t\t\t<p>{ GICS }</p>\n\t\t\t\t\t<p>{ lineTwo }</p>\n\t\t\t\t</div>\n\t\t\t\t<p>{ format( parsedTime, \"h:mm aaa '-' EE do MMM\" ) }</p>\n\t\t\t</div>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<a href={ hotcopper_url } target=\"_blank\" rel=\"noopener noreferrer\">{ description }<FontAwesomeIcon icon={ faExternalLinkAlt } size=\"xs\" className={ isHotcopperAnnAvailable ? \"-colour-tertiary\" : \"\" } /></a>\n\t\t\t\t<div className=\"inputs-box-column\">\n\t\t\t\t\t<div onClick={ () => setSavedData({ ...savedData, [ id ]: { read: true, saved: !saved }}) }>\n\t\t\t\t\t\t<label>Saved</label>\n\t\t\t\t\t\t{ saved ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={ () => setSavedData({ ...savedData, [ id ]: { saved, read: !read }}) }>\n\t\t\t\t\t\t<label>Read</label>\n\t\t\t\t\t\t{ read ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nRowCard.propTypes = {\n\tdata: PropTypes.object,\n\tsavedData: PropTypes.object,\n\tsetSavedData: PropTypes.func,\n};\n\nconst Clock = () => {\n\tconst [ time, setTime ] = useState( new Date());\n\tconst [ intervalRef, setIntervalRef ] = useState( false );\n\n\tuseEffect(() => { \n\t\tif ( !intervalRef ) setIntervalRef( setInterval(() => setTime( new Date()), 1000 )); \n\t\t\n\t\treturn () => {\n\t\t\tif ( intervalRef ) clearInterval( intervalRef );\n\t\t};\n\t}, [ intervalRef ]);\n\n\treturn <h3>{ format( time, \"h:mm:ss aaa '-' EE do MMM\" ) }</h3>;\n};\n"],"sourceRoot":""}