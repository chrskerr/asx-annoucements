{"version":3,"sources":["App.js","webpack:///./src/index.js?b635"],"names":["App","useState","data","setData","JSON","parse","localStorage","getItem","savedData","setSavedData","isLoading","setIsLoading","onlyPriceSensitive","setOnlyPriceSensitive","onlyAsx300","setOnlyAsx300","useEffect","fetch","then","res","json","catch","error","console","finally","setItem","stringify","dataPlusSaved","_","map","el","id","read","get","saved","sortedData","orderBy","className","type","checked","onChange","disabled","icon","faSpinner","spin","size","faCheck","isEmpty","key","RowCard","description","discussionUrl","ticker","time","businessName","markRead","href","target","rel","onClick","faExternalLinkAlt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3795f000.chunk.js","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"proptypes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner, faCheck, faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport _ from \"lodash\";\n\nexport default function App () {\n\tconst [ data, setData ] = useState([]);\n\tconst [ savedData, setSavedData ] = useState( JSON.parse( localStorage.getItem( \"savedData\" )));\n\tconst [ isLoading, setIsLoading ] = useState( 0 );\n\tconst [ onlyPriceSensitive, setOnlyPriceSensitive ] = useState( true );\n\tconst [ onlyAsx300, setOnlyAsx300 ] = useState( true );\n\t\n\tuseEffect(() => {\n\t\tif ( !isLoading ) {\n\t\t\tsetIsLoading( true );\n\t\t\tfetch( `https://asx-node.herokuapp.com/?price_sensitive=${ onlyPriceSensitive ? \"true\" : \"false\" }&asx300=${ onlyAsx300 ? \"true\" : \"false\" }` )\n\t\t\t\t.then( res => res.json())\n\t\t\t\t.then( data => setData( data ))\n\t\t\t\t.catch( error => console.error( error ))\n\t\t\t\t.finally(() => setIsLoading( false ));\n\t\t}\n\t}, [ onlyPriceSensitive, onlyAsx300 ]);\n\n\tuseEffect(() => {\n\t\tif ( !savedData ) setSavedData({});\n\t\tlocalStorage.setItem( \"savedData\", JSON.stringify( savedData ));\n\t}, [ savedData ]);\n\n\tconst dataPlusSaved = _.map( data, el => {\n\t\tconst { id } = el;\n\t\treturn {\n\t\t\t...el,\n\t\t\tread: _.get( savedData, [ id, \"read\" ], false ),\n\t\t\tsaved: _.get( savedData,[ id, \"saved\" ], false ),\n\t\t};\n\t});\n\n\tconst sortedData = _.orderBy( dataPlusSaved, [ \"read\", \"saved\", \"id\" ], [ \"asc\", \"asc\", \"desc\" ]);\n\n\treturn (\n\t\t<div className=\"body\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<h2>ASX Recent Announcement Feed</h2>\n\t\t\t\t<p>A scraped collection of ASX announcements from midnight today.</p>\n\t\t\t</div>\n\t\t\t<div className=\"filters\">\n\t\t\t\t<div>\n\t\t\t\t\t<label>Price sensitive only?</label>\n\t\t\t\t\t<input type=\"checkbox\" checked={ onlyPriceSensitive } onChange={ () => setOnlyPriceSensitive( !onlyPriceSensitive ) } disabled={ isLoading } />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>ASX 300 only?</label>\n\t\t\t\t\t<input type=\"checkbox\" checked={ onlyAsx300 } onChange={ () => setOnlyAsx300( !onlyAsx300 ) } disabled={ isLoading } />\n\t\t\t\t</div>\n\t\t\t\t<div className={ isLoading ? \"loading\" : \"loaded\" }>\n\t\t\t\t\t{ isLoading ?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>Loading</p>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={ faSpinner } spin size=\"2x\" />\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>Loaded</p>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={ faCheck } />\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ !_.isEmpty( sortedData ) && _.map( sortedData, el => <RowCard data={ el } key={ el.id } savedData={ savedData } setSavedData={ setSavedData } /> ) }\n\t\t</div>\n\t);\n}\n\nconst RowCard = ({ data, savedData, setSavedData }) => {\n\tconst { id, description, discussionUrl, ticker, time, businessName, read, saved } = data;\n\n\tconst markRead = () => { if ( !saved ) setSavedData({ ...savedData, [ id ]: { saved, read: !read }}); };\n\n\treturn (\n\t\t<div className={ `card ${ saved ? \"saved\" : \"\" } ${ ( !saved && read ) ? \"read\": \"\" }` }>\n\t\t\t<div className=\"card-header\">\n\t\t\t\t<p>{ ticker } - { businessName }</p>\n\t\t\t\t<p>{ time }</p>\n\t\t\t</div>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<a href={ discussionUrl } target=\"_blank\" rel=\"noopener noreferrer\" onClick={ markRead }>{ description }<FontAwesomeIcon icon={ faExternalLinkAlt } size=\"xs\" /></a>\n\t\t\t\t<div className=\"read-saved\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Saved</label>\n\t\t\t\t\t\t<input type=\"checkbox\" checked={ saved } onChange={ () => setSavedData({ ...savedData, [ id ]: { read: false, saved: !saved }}) } />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Read</label>\n\t\t\t\t\t\t<input type=\"checkbox\" checked={ read } onChange={ markRead } disabled={ saved } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nRowCard.propTypes = {\n\tdata: PropTypes.object,\n\tsavedData: PropTypes.object,\n\tsetSavedData: PropTypes.func,\n};\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( \"root\" ),\n);\n"],"sourceRoot":""}