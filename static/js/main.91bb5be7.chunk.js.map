{"version":3,"sources":["Home.js","App.js","webpack:///./src/index.js?b635"],"names":["SUBSCRIPTION","gql","marketCapOptions","label","value","marketCapSizes","micro","lower","upper","small","medium","large","Home","useState","JSON","parse","localStorage","getItem","savedData","setSavedData","is_price_sensitive","set_is_price_sensitive","market_cap","set_market_cap","is_after_4pm_yesterday","set_is_after_4pm_yesterday","Date","time","setTime","intervalRef","setIntervalRef","useEffect","setInterval","time_before","formatISO","set","subBusinessDays","hours","minutes","seconds","useSubscription","variables","market_cap_lower","market_cap_upper","data","loading","announcements","_","get","annoucementsWithSavedData","map","announcement","id","read","saved","unread","filter","setItem","stringify","document","title","size","className","format","onClick","icon","faCheck","faTimes","onChange","e","target","isEmpty","key","faSpinner","spin","el","RowCard","description","hotcopper_url","stock","name","ticker","exchange","GICS","parsedTime","parseJSON","lineTwo","compact","numeral","join","isHotcopperAnnAvailable","differenceInMinutes","href","rel","faExternalLinkAlt","App","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","timeout","link","split","query","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91bb5be7.chunk.js","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"proptypes\";\nimport { useSubscription } from \"@apollo/react-hooks\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner, faCheck, faTimes, faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport _ from \"lodash\";\nimport gql from \"graphql-tag\";\nimport { parseJSON, format, subBusinessDays, set, formatISO, differenceInMinutes } from \"date-fns\";\nimport numeral from \"numeral\";\n\nconst SUBSCRIPTION = gql`\nsubscription SubcribeAnnouncements ( $time_before: timestamptz!, $is_price_sensitive: [Boolean!], $market_cap_lower: numeric, $market_cap_upper: numeric ) {\n\tannouncements( \n\t\twhere: { \n            time: { _gte: $time_before },\n\t\t\tis_price_sensitive: { _in: $is_price_sensitive },\n            stock: { market_cap: { _gte: $market_cap_lower, _lte: $market_cap_upper }}\n\t\t},\n\t\torder_by: { time: desc }\n\t) {\n\t\tann_download_url\n\t\tdescription\n\t\thotcopper_url\n\t\tid time\n\t\tis_price_sensitive\n\t\tstock {\n\t\t\tname ticker\n\t\t\tGICS exchange\n            market_cap\n\t\t}\n\t}\n}`;\n\nconst marketCapOptions = [\n\t{ label: \"Micro Cap\", value: \"micro\" },\n\t{ label: \"Small Cap\", value: \"small\" },\n\t{ label: \"Medium Cap\", value: \"medium\" },\n\t{ label: \"Large Cap\", value: \"large\" },\n];\n\nconst marketCapSizes = {\n\tmicro: { lower: 0, upper: 20000000 },\n\tsmall: { lower: 20000000, upper: 2000000000 },\n\tmedium: { lower: 2000000000, upper: 10000000000 },\n\tlarge: { lower: 10000000000, upper: 999999999999999999 },\n};\n\nexport default function Home () {\n\tconst [ savedData, setSavedData ] = useState( JSON.parse( localStorage.getItem( \"savedData\" )));\n\tconst [ is_price_sensitive, set_is_price_sensitive ] = useState( true );\n\tconst [ market_cap, set_market_cap ] = useState( \"small\" );\n\tconst [ is_after_4pm_yesterday, set_is_after_4pm_yesterday ] = useState( true );\n\n\tconst [ time, setTime ] = useState( new Date());\n\tconst [ intervalRef, setIntervalRef ] = useState( false );\n\n\tuseEffect(() => { if ( !intervalRef ) setIntervalRef( setInterval(() => setTime( new Date()), 1000 )); }, [ intervalRef ]);\n    \n\tconst time_before = is_after_4pm_yesterday ? formatISO( set( subBusinessDays( new Date(), 1 ), { hours: 16, minutes: 0, seconds: 0 })) : formatISO( 0 );\n\n\tconst { data, loading } = useSubscription( SUBSCRIPTION, { variables: { \n\t\tis_price_sensitive: is_price_sensitive ? [ true ] : [ true, false ],\n\t\ttime_before,\n\t\tmarket_cap_lower: marketCapSizes[ market_cap ].lower,\n\t\tmarket_cap_upper: marketCapSizes[ market_cap ].upper,\n\t}});\n    \n\tconst announcements = _.get( data, \"announcements\" );\n\tconst annoucementsWithSavedData = _.map( announcements, announcement => {\n\t\tconst { id } = announcement;\n\t\treturn {\n\t\t\t...announcement,\n\t\t\tread: _.get( savedData, [ id, \"read\" ], false ),\n\t\t\tsaved: _.get( savedData,[ id, \"saved\" ], false ),\n\t\t};});\n\n\tconst unread = _.filter( annoucementsWithSavedData, { read: false, saved: false });\n\tconst saved = _.filter( annoucementsWithSavedData, { saved: true });\n\tconst read = _.filter( annoucementsWithSavedData, { read: true, saved: false });\n\n\tuseEffect(() => {\n\t\tif ( !savedData ) setSavedData({});\n\t\tlocalStorage.setItem( \"savedData\", JSON.stringify( savedData ));\n\t}, [ savedData ]);\n\t\n\tuseEffect(() => { document.title = `ASX  Ann Feed (${ _.size( unread ) } unread)`; }, [ unread ]);\n\n\treturn (\n\t\t<div className=\"body\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<h3>{ format( time, \"h:mm:ss aaa '-' EE do MMM\" ) }</h3>\n\t\t\t\t<h2>ASX Recent Announcement Feed</h2>\n\t\t\t\t<p>A scraped collection of ASX announcements, data live updated every minute during peak hours.</p>\n\t\t\t\t<p>History of read and saved annoucments saved locally to your browser.</p>\n\t\t\t</div>\n\t\t\t<div className=\"inputs-box-row\">\n\t\t\t\t<div onClick={ () => set_is_price_sensitive( !is_price_sensitive ) }>\n\t\t\t\t\t<p>Price sensitive only?</p>\n\t\t\t\t\t{ is_price_sensitive ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>Market cap</p>\n\t\t\t\t\t<select value={ market_cap } onChange={ e => set_market_cap( e.target.value ) }>\n\t\t\t\t\t\t{ !_.isEmpty( marketCapOptions ) && _.map( marketCapOptions, ({ value, label }) => <option key={ value } value={ value }>{ label }</option> )}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div onClick={ () => set_is_after_4pm_yesterday( !is_after_4pm_yesterday ) }>\n\t\t\t\t\t<p>After 4pm yesterday only?</p>\n\t\t\t\t\t{ is_after_4pm_yesterday ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{ loading && <div className=\"loader\">\n\t\t\t\t<FontAwesomeIcon icon={ faSpinner } spin size=\"3x\" />\n\t\t\t</div> }\n\n\t\t\t{ ( !loading && _.isEmpty( unread ) && _.isEmpty( saved ) && _.isEmpty( read )) && <p className=\"-colour-tertiary\">No matching announcements</p> }\n\t\t\t\n\t\t\t{ !_.isEmpty( saved ) && <h5>Saved ({ _.size( saved )}):</h5> }\n\t\t\t{ !_.isEmpty( saved ) && _.map( saved, el => <RowCard data={ el } key={ el.id } savedData={ savedData } setSavedData={ setSavedData } /> ) }\n\n\t\t\t{ !_.isEmpty( unread ) && <h5>Unread ({ _.size( unread )}):</h5> }\n\t\t\t{ !_.isEmpty( unread ) && _.map( unread, el => <RowCard data={ el } key={ el.id } savedData={ savedData } setSavedData={ setSavedData } /> ) }\n\t\t\t\n\t\t\t{ !_.isEmpty( read ) && <h5>Read ({ _.size( read )}):</h5> }\n\t\t\t{ !_.isEmpty( read ) && _.map( read, el => <RowCard data={ el } key={ el.id } savedData={ savedData } setSavedData={ setSavedData } /> ) }\n\t\t</div>\n\t);\n}\n\nconst RowCard = ({ data, savedData, setSavedData }) => {\n\tconst { id, description, hotcopper_url, stock, time, read, saved, is_price_sensitive } = data;\n\tconst { name, ticker, exchange, market_cap, GICS } = stock;\n\n\tconst parsedTime =  parseJSON( time );\n\tconst lineTwo = _.compact([ `Market Cap: ${ numeral( market_cap ).format( \"0.0a\" ) }`, is_price_sensitive ? \"Price Sensitive\" : false ]).join( \" - \" );\n\tconst isHotcopperAnnAvailable = differenceInMinutes( new Date(), parsedTime ) <= 20;\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-header\">\n\t\t\t\t<div>\n\t\t\t\t\t<a href={ `https://finance.yahoo.com/quote/${ ticker  }.AX` } target=\"_blank\" rel=\"noopener noreferrer\">{ exchange }:{ ticker }{ name && ` - ${ name }` }<FontAwesomeIcon icon={ faExternalLinkAlt } size=\"xs\" /></a>\n\t\t\t\t\t<p>{ GICS }</p>\n\t\t\t\t\t<p>{ lineTwo }</p>\n\t\t\t\t</div>\n\t\t\t\t<p>{ format( parsedTime, \"h:mm aaa '-' EE do MMM\" ) }</p>\n\t\t\t</div>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<a href={ hotcopper_url } target=\"_blank\" rel=\"noopener noreferrer\">{ description }<FontAwesomeIcon icon={ faExternalLinkAlt } size=\"xs\" className={ isHotcopperAnnAvailable ? \"-colour-tertiary\" : \"\" } /></a>\n\t\t\t\t<div className=\"inputs-box-column\">\n\t\t\t\t\t<div onClick={ () => setSavedData({ ...savedData, [ id ]: { read: true, saved: !saved }}) }>\n\t\t\t\t\t\t<label>Saved</label>\n\t\t\t\t\t\t{ saved ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={ () => setSavedData({ ...savedData, [ id ]: { saved, read: !read }}) }>\n\t\t\t\t\t\t<label>Read</label>\n\t\t\t\t\t\t{ read ? <FontAwesomeIcon icon={ faCheck } /> : <FontAwesomeIcon icon={ faTimes } className=\"unchecked\" /> }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nRowCard.propTypes = {\n\tdata: PropTypes.object,\n\tsavedData: PropTypes.object,\n\tsetSavedData: PropTypes.func,\n};\n","\nimport React from \"react\";\nimport Home from \"./Home\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-client\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { split } from \"apollo-link\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nexport default function App () {\n\n\tconst httpLink = new HttpLink({\n\t\turi: \"https://quiet-river-86309.herokuapp.com/v1/graphql\",\n\t});\n    \n\tconst wsLink = new WebSocketLink({\n\t\turi: \"wss://quiet-river-86309.herokuapp.com/v1/graphql\",\n\t\toptions: {\n\t\t\treconnect: true,\n\t\t\ttimeout: 30000,\n\t\t},\n\t});\n\n\tconst link = split(\n\t\t({ query }) => {\n\t\t\tconst { kind, operation } = getMainDefinition( query );\n\t\t\treturn kind === \"OperationDefinition\" && operation === \"subscription\";\n\t\t},\n\t\twsLink,\n\t\thttpLink,\n\t);\n\n\tconst client = new ApolloClient({\n\t\tlink,\n\t\tcache: new InMemoryCache(),\n\t});\n\n\treturn (\n\t\t<ApolloProvider client={ client }>\n\t\t\t<Home />\n\t\t</ApolloProvider>\n\t);\n}\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( \"root\" ),\n);\n"],"sourceRoot":""}